import {Router, Request, Response} from "express";import User from '../models/User';import auth from "./auth";import authorize from "../middleware/authorize";const router: Router = Router();// Get all users (restricted to admins)router.get('/users', auth, authorize(['admin']), async (req: Request, res: Response) => {    try {        const users = await User.find().exec();        res.status(200).json(users);    } catch (err) {        res.status(500).json({message: err});    }});// Get user details by ID (accessible to everyone or restricted if needed)router.put('/users/:id', async (req: Request, res: Response) => {    try {        const user = await User.findByIdAndUpdate(req.params.id, req.body, {new: true}).exec();        if (!user) return res.status(404).json({message: 'User not found'});        res.status(200).json(user);    } catch (err) {        res.status(400).json({message: err});    }});// Delete user by ID (restricted to admins)router.delete('/users/:id', auth, authorize(['admin']), async (req: Request, res: Response) => {    try {        const user = await User.findByIdAndDelete(req.params.id).exec();        if (!user) return res.status(404).json({message: 'User not found'});        res.status(204).json(user);    } catch (err) {        res.status(500).json({message: err});    }});export default router;
import React from "react";import "./blocks.scss";export interface WordPressBlocksViewerProps {    blocks: Array<ContentBlock | null>;    fallbackBlock?: React.FC<ContentBlock>;}export interface ContentBlock {    __typename?: string;    apiVersion?: number;    cssClassNames?: string;    innerBlocks?: Array<ContentBlock | null>;    name?: string;    renderedHtml?: string;    isDynamic?: boolean;}export interface BlockWithAttributes extends ContentBlock {    attributes?: Record<string, unknown> | null;}const WordPressBlocksViewer: React.FC<WordPressBlocksViewerProps> = (props) => {    return (        <div>            {props.blocks && props.blocks.map( (block, index) => {                if (block) {                    return (                        <div key={index} dangerouslySetInnerHTML={{__html: block.renderedHtml || ''}}/>                    );                } else if (props.fallbackBlock) {                    const FallbackBlock = props.fallbackBlock;                    return <FallbackBlock key={index} {...props} />                }                return null;            } )}        </div>    );}WordPressBlocksViewer.displayName = "WordPressBlocksViewer";export {WordPressBlocksViewer};